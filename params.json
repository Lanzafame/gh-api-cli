{
  "name": "Gh-api-cli",
  "tagline": "Command line client for github api",
  "body": "# gh-api-cli\r\n\r\nCommand line client for github api\r\n\r\nThis tool is part of the [go-github-release workflow](https://github.com/mh-cbon/go-github-release)\r\n\r\n# Install\r\n\r\nPick an msi package [here](https://github.com/mh-cbon/gh-api-cli/releases)!\r\n\r\n__chocolatey__\r\n\r\n```sh\r\nchoco install gh-api-cli\r\n```\r\n\r\n__deb/ubuntu/rpm repositories__\r\n\r\n```sh\r\nwget -O - https://raw.githubusercontent.com/mh-cbon/latest/master/source.sh \\\r\n| GH=mh-cbon/gh-api-cli sh -xe\r\n# or\r\ncurl -L https://raw.githubusercontent.com/mh-cbon/latest/master/source.sh \\\r\n| GH=mh-cbon/gh-api-cli sh -xe\r\n```\r\n\r\n__deb/ubuntu/rpm package__\r\n\r\n```sh\r\ncurl -L https://raw.githubusercontent.com/mh-cbon/latest/master/install.sh \\\r\n| GH=mh-cbon/gh-api-cli sh -xe\r\n# or\r\nwget -q -O - --no-check-certificate \\\r\nhttps://raw.githubusercontent.com/mh-cbon/latest/master/install.sh \\\r\n| GH=mh-cbon/gh-api-cli sh -xe\r\n```\r\n\r\n__go__\r\n\r\n```sh\r\nmkdir -p $GOPATH/src/github.com/mh-cbon\r\ncd $GOPATH/src/github.com/mh-cbon\r\ngit clone https://github.com/mh-cbon/gh-api-cli.git\r\ncd gh-api-cli\r\nglide install\r\ngo install\r\n```\r\n\r\n# Usage\r\n\r\n```\r\nNAME:\r\n   gh-api-cli - Github api command line client\r\n\r\nUSAGE:\r\n   gh-api-cli <cmd> <options>\r\n\r\nVERSION:\r\n   0.0.0\r\n\r\nCOMMANDS:\r\n     add-auth                 Add a new authorization\r\n     list-auth                List authorizations\r\n     rm-auth                  Remove an authorization\r\n     get-auth                 Get token from a locally saved authorization\r\n     create-release           Create a new release\r\n     rm-release               Delete a release\r\n     upload-release-asset     Upload assets to a release\r\n     dl-assets                Download assets\r\n     rm-assets                Delete assets\r\n\r\nGLOBAL OPTIONS:\r\n   --help, -h\t\tshow help\r\n   --version, -v\tprint the version\r\n```\r\n\r\n#### add-auth\r\n```\r\nNAME:\r\n   gh-api-cli add-auth - Add a new authorization\r\n\r\nUSAGE:\r\n   gh-api-cli add-auth [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --username value, -u value    Github username\r\n   --password value, -p value    Github password\r\n   --name value, -n value        Name of the authorization to add\r\n   --rights value, -r value      Permissions to set\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli add-auth -n test -r user -r repo # will prompt for username/password\r\n  gh-api-cli add-auth -n test -r user -u your -p pwd # won t prompt unless you have 2F ident on\r\n  gh-api-cli add-auth -n test -r user,repo -u your -p pwd\r\n```\r\n\r\nWhere `rights` contains some of :\r\n\r\n```\r\nuser              user:email\r\nuser:follow       public_repo\r\nrepo              repo_deployment\r\nrepo:status       delete_repo\r\nnotifications     gist\r\nread:repo_hook    write:repo_hook\r\nadmin:repo_hook   admin:org_hook\r\nadmin             read:org\r\nwrite:org         admin:org\r\nread:public_key   write:public_key\r\nadmin:public_key  read:gpg_key\r\nwrite:gpg_key     admin:gpg_key\r\n```\r\n\r\n#### list-auth\r\n```\r\nNAME:\r\n   gh-api-cli list-auth - List authorizations\r\n\r\nUSAGE:\r\n   gh-api-cli list-auth [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --username value, -u value   Github username\r\n   --password value, -p value   Github password\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli list-auth -n test # will prompt for username/password\r\n  gh-api-cli list-auth -n test -u your -p pwd # won t prompt unless you have 2F ident on\r\n```\r\n\r\n#### rm-auth\r\n```\r\nNAME:\r\n   gh-api-cli rm-auth - Remove an existing authorization\r\n\r\nUSAGE:\r\n   gh-api-cli rm-auth [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --username value, -u value   Github username\r\n   --password value, -p value   Github password\r\n   --name value, -n value       Name of the authorization to delete\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli rm-auth -n test # will prompt for username/password\r\n  gh-api-cli rm-auth -n test -u your -p pwd # won t prompt unless you have 2F ident on\r\n```\r\n\r\n#### get-auth\r\n```\r\nNAME:\r\n   gh-api-cli get-auth - Get token from a locally saved authorization\r\n\r\nUSAGE:\r\n   gh-api-cli get-auth [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --name value, -n value       Name of the authorization to look for\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli get-auth -n test\r\n```\r\n\r\n#### create-release\r\n```\r\nNAME:\r\n   gh-api-cli create-release - Create a release\r\n\r\nUSAGE:\r\n   gh-api-cli create-release [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --name value, n value           Name of the locally saved authentication.\r\n   --token value, t value          Personal access token authentication.\r\n   --owner value, -o value         Repo owner\r\n   --repository value, -r value    Repo name\r\n   --ver value                     Version name\r\n   --author value, -a value        Release author name\r\n   --email value, -e value         Release author email\r\n   --draft value, -d value         Make a draft release, value=yes|1|true|no|0|false\r\n   --changelog cmd, -c cmd         A command to generate body content of the release\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli create-release -n test -o mh-cbon -r gh-api-cli --ver 0.0.1\r\n```\r\n\r\n#### rm-release\r\n```\r\nNAME:\r\n   gh-api-cli rm-release - Delete a release\r\n\r\nUSAGE:\r\n   gh-api-cli rm-release [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --name value, n value           Name of the locally saved authentication.\r\n   --token value, t value          Personal access token authentication.\r\n   --owner value, -o value         Repo owner\r\n   --repository value, -r value    Repo name\r\n   --ver value                     Version name\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli create-release -n test -o mh-cbon -r gh-api-cli --ver 0.0.1\r\n```\r\n\r\n#### upload-release-asset\r\n```\r\nNAME:\r\n   gh-api-cli upload-release-asset - Upload assets to a release\r\n\r\nUSAGE:\r\n   gh-api-cli upload-release-asset [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --name value, n value           Name of the locally saved authentication.\r\n   --token value, t value          Personal access token authentication.\r\n   --glob value, -g value          Glob pattern of files to upload\r\n   --owner value, -o value         Repo owner\r\n   --repository value, -r value    Repo name\r\n   --ver value                     Version name\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli upload-release-asset -n test -g README.md -o mh-cbon -r gh-api-cli --ver 0.0.1\r\n```\r\n\r\n#### rm-assets\r\n```\r\nNAME:\r\n   gh-api-cli rm-assets - Delete assets of a release\r\n\r\nUSAGE:\r\n   gh-api-cli rm-assets [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --name value, n value           Name of the locally saved authentication.\r\n   --token value, t value          Personal access token authentication.\r\n   --glob value, -g value          Glob pattern of files to upload\r\n   --owner value, -o value         Repo owner\r\n   --repository value, -r value    Repo name\r\n   --ver value                     Version name\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli upload-release-asset -n test -g README.md -o mh-cbon -r gh-api-cli --ver 0.0.1\r\n```\r\n\r\n#### dl-assets\r\n```\r\nNAME:\r\n   gh-api-cli dl-assets - Download assets\r\n\r\nUSAGE:\r\n   gh-api-cli dl-assets [command options] [arguments...]\r\n\r\nOPTIONS:\r\n   --name value, n value           Name of the locally saved authentication.\r\n   --token value, t value          Personal access token authentication.\r\n   --owner value, -o value         Repo owner\r\n   --repository value, -r value    Repo name\r\n   --glob value, -g value          A glob to match files to download.\r\n                                   It resolves to a regexp like '(i?)^glob$'.\r\n                                   Stars '*' are replace by '.+'.\r\n   --skip-prerelease yes|no        if yes, skips pre-releases from the selection.\r\n   --version constraint            A version constraint,\r\n                                   Special value 'latest' is acceptable.\r\n   --out value                     A formatted string to write files.\r\n                                   It can contain token such as\r\n                                   %f: full filename\r\n                                   %o: repository owner\r\n                                   %r: repository name\r\n                                   %e: file extension, minus dot prefix, detected JIT\r\n                                   %s: target system (windows, darwin, linux), detected JIT\r\n                                   %a: architecture (amd64, 386), detected JIT\r\n                                   %v: version the asset is attached to\r\n```\r\n\r\n```\r\nEXAMPLE\r\n  gh-api-cli dl-assets -o mh-cbon -r gh-api-cli --ver 0.0.1\r\n  gh-api-cli dl-assets -o mh-cbon -r gh-api-cli --ver 0.0.1 --out dl/%f\r\n  gh-api-cli dl-assets -o mh-cbon -r gh-api-cli --ver 0.0.1 --out dl/%f -g '*amd64*deb'\r\n  gh-api-cli dl-assets -o mh-cbon -r gh-api-cli --ver latest --out dl/%s/%r.%v-%a.%e\r\n  gh-api-cli dl-assets -o mh-cbon -r gh-api-cli --out \"dl/%s/%r-%v-%a.%e\" --ver \">0.0.10\"\r\n```\r\n\r\n# Notes\r\n\r\nWhen you `add, remove, list` authorizations, personal access token authentication is not permitted, [see this](https://developer.github.com/v3/oauth_authorizations/#deprecation-notice)\r\n\r\n# Testing\r\n\r\n```sh\r\n (USER=xxx PWRD=yyy ./test.sh | grep \"OK, ALL FINE\") || (echo \"\" && echo \"\" && echo \"beep boop failed\")\r\n```\r\n\r\n# Todo\r\n\r\n- add a command to clean up old gh releases,\r\nsomething that would help to keep only N most recent releases for each major version.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}